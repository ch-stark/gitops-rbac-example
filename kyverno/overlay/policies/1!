# Please edit the object below. Lines beginning with a '#' will be ignored,
# and an empty file will abort the edit. If an error occurs while saving this file will be
# reopened with the relevant failures.
#
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    meta.helm.sh/release-name: policy-reporter
    meta.helm.sh/release-namespace: policy-reporter
  creationTimestamp: "2022-05-30T17:38:51Z"
  generation: 1
  labels:
    app.kubernetes.io/instance: policy-reporter
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: policy-reporter
    app.kubernetes.io/version: 2.5.0
    helm.sh/chart: policy-reporter-2.8.0
  name: policy-reporter
  namespace: policy-reporter
  resourceVersion: "1461040"
  uid: 9dc85a29-0cfb-4d3e-af60-3c40f67cf19e
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: policy-reporter
      app.kubernetes.io/name: policy-reporter
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/secret: 0fa2b503db2d2d91e526d6ada805453d57896b02215763bb58926cdb9e657cd5
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: policy-reporter
        app.kubernetes.io/name: policy-reporter
    spec:
      automountServiceAccountToken: true
      containers:
      - args:
        - --config=/app/config.yaml
        - --dbfile=/sqlite/database.db
        - --metrics-enabled=true
        - --rest-enabled=true
        env:
        - name: NAMESPACE
          value: policy-reporter
        image: ghcr.io/kyverno/policy-reporter:2.5.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /ready
            port: http
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: policy-reporter
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: http
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1234
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /sqlite
          name: sqlite
        - mountPath: /app/config.yaml
          name: config-file
          readOnly: true
          subPath: config.yaml
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 1234
      serviceAccount: policy-reporter
      serviceAccountName: policy-reporter
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: sqlite
      - name: config-file
        secret:
          defaultMode: 420
          optional: true
          secretName: policy-reporter-config
status:
  conditions:
  - lastTransitionTime: "2022-05-30T17:38:51Z"
    lastUpdateTime: "2022-05-30T17:38:51Z"
    message: Created new replica set "policy-reporter-6dfcc89cd8"
    reason: NewReplicaSetCreated
    status: "True"
    type: Progressing
  - lastTransitionTime: "2022-05-30T17:38:51Z"
    lastUpdateTime: "2022-05-30T17:38:51Z"
    message: Deployment does not have minimum availability.
    reason: MinimumReplicasUnavailable
    status: "False"
    type: Available
  - lastTransitionTime: "2022-05-30T17:38:51Z"
    lastUpdateTime: "2022-05-30T17:38:51Z"
    message: 'pods "policy-reporter-6dfcc89cd8-" is forbidden: unable to validate against any security context constraint: [provider "anyuid": Forbidden: not usable by user or serviceaccount, provider restricted: .spec.securityContext.fsGroup: Invalid value: []int64{1234}: 1234 is not an allowed group, spec.containers[0].securityContext.runAsUser: Invalid value: 1234: must be in the ranges: [1000940000, 1000949999], provider "nonroot": Forbidden: not usable by user or serviceaccount, provider "hostmount-anyuid": Forbidden: not usable by user or serviceaccount, provider "machine-api-termination-handler": Forbidden: not usable by user or serviceaccount, provider "hostnetwork": Forbidden: not usable by user or serviceaccount, provider "hostaccess": Forbidden: not usable by user or serviceaccount, provider "node-exporter": Forbidden: not usable by user or serviceaccount, provider "privileged": Forbidden: not usable by user or serviceaccount]'
    reason: FailedCreate
    status: "True"
    type: ReplicaFailure
  observedGeneration: 1
  unavailableReplicas: 1
